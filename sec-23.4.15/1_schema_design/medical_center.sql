DROP TABLE IF EXISTS diagnoses;
DROP TABLE IF EXISTS appointments;
DROP TABLE IF EXISTS patients;
DROP TABLE IF EXISTS doctors;
DROP TABLE IF EXISTS conditions;
DROP TABLE IF EXISTS clinics;
DROP TABLE IF EXISTS people;

CREATE TABLE people (
  id SERIAL PRIMARY KEY,
  first_name VARCHAR(30) NOT NULL,
  last_name VARCHAR(30),
  birthdate TIMESTAMP NOT NULL
);

CREATE TABLE clinics (
  id SERIAL PRIMARY KEY,
  name VARCHAR(30) NOT NULL,
  location VARCHAR(100),
  founding TIMESTAMP
);

CREATE TABLE conditions (
  id SERIAL PRIMARY KEY,
  name VARCHAR(30) UNIQUE NOT NULL,
  description TEXT,
  scientific_paper VARCHAR(30),
  cure VARCHAR(30)
);

CREATE TABLE doctors (
  id SERIAL PRIMARY KEY,
  person INT NOT NULL UNIQUE REFERENCES people ON DELETE CASCADE,
  clinic INT NOT NULL REFERENCES clinics ON DELETE SET NULL,
  specialty VARCHAR(30),
  graduation_year INT,
  college VARCHAR(30)
);

CREATE TABLE patients (
  id SERIAL PRIMARY KEY,
  person INT NOT NULL UNIQUE REFERENCES people ON DELETE CASCADE,
  primary_doctor INT REFERENCES doctors ON DELETE SET NULL,
  insurance VARCHAR(30)
);

CREATE TABLE appointments (
  id SERIAL PRIMARY KEY,
  time TIMESTAMP NOT NULL,
  patient INT NOT NULL REFERENCES patients ON DELETE CASCADE,
  doctor INT NOT NULL REFERENCES doctors ON DELETE CASCADE,
  clinic INT NOT NULL REFERENCES clinics ON DELETE CASCADE
);

CREATE TABLE diagnoses (
  id SERIAL PRIMARY KEY,
  note TEXT,
  appointment INT NOT NULL REFERENCES appointments ON DELETE CASCADE,
  condition INT NOT NULL REFERENCES conditions ON DELETE CASCADE
);